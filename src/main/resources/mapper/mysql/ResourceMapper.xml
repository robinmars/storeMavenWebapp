<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hskj.monitor.mapper.ResourceMapper">

	<!-- 抽出字段列表 -->
	<sql id="_columns">
		sn,name,url,description,insert_time,update_time,psn
	</sql>
	
	<!-- 抽出where语句 -->
	<sql id="_where">
		<where>
			1=1
			<if test="@com.hskj.common.mybatis.MybatisOgnl@isNotEmpty(sn)">
				and sn like concat ('%',#{sn} ,'%')
			</if>
			<if test="@com.hskj.common.mybatis.MybatisOgnl@isNotEmpty(name)">
				and name like concat ('%',#{name} ,'%')
			</if>
			<if test="@com.hskj.common.mybatis.MybatisOgnl@isNotEmpty(url)">
				and url like concat('%',#{url},'%')
			</if>
			<if test="@com.hskj.common.mybatis.MybatisOgnl@isNotEmpty(description)">
				and description like concat ('%',#{description} ,'%')
			</if>
			<if test="@com.hskj.common.mybatis.MybatisOgnl@isNotEmpty(psn)">
				and psn = #{psn}
			</if>
			
		</where>
	</sql>

	<!-- 插入一个Resource -->
	<insert id="insert" parameterType="com.hskj.monitor.model.Resource" >
		INSERT INTO resource (
			name,
			url,
			description,
			insert_time,
			update_time,
			psn
		)
		VALUES (
			#{name},
			#{url},
			#{description},
			now(),
			now(),
			#{psn}
		)
	</insert>
	
	<!-- 插入一个resource,并返回这条插入记录的主键sn -->
	<insert id="insertGetPk" parameterType="com.hskj.monitor.model.Resource" >
		INSERT INTO resource (
			name,
			url,
			description,
			insert_time,
			update_time,
			psn
		)
		VALUES (
			#{name},
			#{url},
			#{description},
			now(),
			now(),
			#{psn}
		)		
		<selectKey keyProperty="sn" resultType="long" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 修改resource -->
	<update id="update" parameterType="com.hskj.monitor.model.Resource">
		UPDATE 
			resource
		SET 
			`name` = #{name},
		 	`url` = #{url},
			description = #{description},
		 	insert_time = #{insertTime},
		 	update_time = now(),
		 	psn = #{psn}
		WHERE
			sn = #{sn}
	</update>
	
	<!-- 删除role -->
	<delete id="delete" parameterType="string">
		DELETE FROM 
			resource
		WHERE 
			sn in (${value})
	</delete>
	
	<!-- 根据sn查找实体 -->
	<select id="getByPk" parameterType="int" resultType="com.hskj.monitor.model.Resource">
    	SELECT 
    		<include refid="_columns" /> 
    	FROM 
    		resource
    	WHERE 
    		sn= #{value}
	</select>
	
	<!--根据sns查找实体  -->
	<select id="getByPkSns" parameterType="string" resultType="com.hskj.monitor.model.Resource">
		SELECT 
			<include refid="_columns" />
		FROM 
			resource 
		WHERE 
			sn in (${value})
	</select>
	
	<!-- 分页查询 -->
	<select id="getListByPage" parameterType="com.hskj.common.mybatis.BasePage" resultType="com.hskj.monitor.model.Resource">
		SELECT 
			<include refid="_columns" /> 
		FROM  
			resource
		<include refid="_where"/>
			and psn != 0
		ORDER BY psn DESC,resource.name DESC
	</select>
	
	<!-- 查询 -->
	<select id="getList" parameterType="map" resultType="com.hskj.monitor.model.Resource">
		SELECT 
			<include refid="_columns" /> 
		FROM  
			resource
		<include refid="_where"/>
		ORDER BY resource.name DESC
	</select>

	<!--查询所有的资源 -->
	<select id="getResources" resultType="com.hskj.monitor.model.Resource">
		SELECT 
			<include refid="_columns"/>
		FROM
			resource
		ORDER BY resource.name DESC
	</select>


	<!--根据role的sn查找资源 -->
	<select id="getResourceSetByRoleSn" parameterType="int" resultType="String">
		SELECT
			resource.name
		FROM
			resource
		JOIN role_resource ON role_resource.resource_sn = resource.sn
		where role_resource.role_sn = #{value}
		ORDER BY resource.name DESC
	</select>



</mapper>